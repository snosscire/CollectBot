uses 'WedoEngine/WedoEngine/Engine';
uses 'Game/Config';
uses 'Game/Input';
uses 'Game/Game';
uses 'Game/Controller';
uses 'Game/Map';
uses 'Game/Player';

class Time {
	static number current;
	static number last;
	static number delta;
}

class Application {
	static boolean run;
	static function stop() {
		.run = false;
	}
	function onEvent( object event ) {
		if( event.type == Engine.EVENT_QUIT ) {
			Application.stop();
			return false;
		}
		return true;
	}
}

array frameTimes;
number frameTimesIndex;
number frameCount;
number framesPerSecond;
number count;
object fpsFont = Engine.loadFont('Resources/Fonts/Audiowide/Audiowide-Regular.ttf', 24);

object application = new Application();
object game = new Game();

Config.load();

Engine.createWindow(Config.WindowTitle, Config.ScreenWidth, Config.ScreenHeight);

InputManager.register(application);
Application.run = true;
GameClock.start(Config.GameTime);
game.start();

frameTimes = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
frameCount = 0;
framesPerSecond = 0;

Time.last = Engine.currentTime();

while( Application.run ) {
	Time.current = Engine.currentTime();
	Time.delta = Time.current - Time.last;
	Time.last = Time.current;

	frameTimesIndex = frameCount % 10;
	frameTimes[frameTimesIndex] = Time.delta;

	frameCount++;
	if( frameCount < 10 ) {
		count = frameCount;
	} else {
		count = 10;
	}
	framesPerSecond = 0;
	for( number i = 0; i < count; i++ ) {
		framesPerSecond += frameTimes[i];
	}
	framesPerSecond /= count;
	framesPerSecond = (framesPerSecond > 0 ? (1000.0 / framesPerSecond).round() : 0);

	GameClock.update();
	InputManager.update();
	game.update();

	Engine.clearScreen();
	game.render();
	GameClock.render();
	Engine.renderText(fpsFont, "${framesPerSecond}", 255, 255, 255, Config.ScreenWidth - 40, 0);
	Engine.updateScreen();	
}
